{"ast":null,"code":"var _jsxFileName = \"/Users/auvik/Desktop/audiorepeat/src/components/AudioFileSelector.js\",\n  _s = $RefreshSig$();\n// src/components/AudioFileSelector.js\n\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AudioFileSelector = _ref => {\n  _s();\n  let {\n    album,\n    onPlay,\n    fileRepeatCount,\n    albumRepeatCount\n  } = _ref;\n  const [selectedFiles, setSelectedFiles] = useState([]);\n  const [localFileRepeatCount, setLocalFileRepeatCount] = useState(fileRepeatCount);\n  const [localAlbumRepeatCount, setLocalAlbumRepeatCount] = useState(albumRepeatCount);\n  useEffect(() => {\n    setSelectedFiles([]);\n    setLocalFileRepeatCount(fileRepeatCount);\n    setLocalAlbumRepeatCount(albumRepeatCount);\n  }, [album]);\n  const handleFileSelect = (event, file) => {\n    const newSelectedFiles = [...selectedFiles];\n    if (event.target.checked) {\n      newSelectedFiles.push(file);\n    } else {\n      const index = newSelectedFiles.indexOf(file);\n      if (index > -1) {\n        newSelectedFiles.splice(index, 1);\n      }\n    }\n    setSelectedFiles(newSelectedFiles);\n  };\n  const handleFileRepeatCountChange = event => {\n    setLocalFileRepeatCount(Number(event.target.value));\n  };\n  const handleAlbumRepeatCountChange = event => {\n    setLocalAlbumRepeatCount(Number(event.target.value));\n  };\n  const handlePlayClick = () => {\n    const sortedFiles = [...selectedFiles].sort((a, b) => a.id - b.id);\n    onPlay(sortedFiles, localFileRepeatCount, localAlbumRepeatCount);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: album.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Select Audio Files\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 5\n      }, this), album.audioFiles.map(file => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          id: \"file-\".concat(file.id),\n          checked: selectedFiles.includes(file),\n          onChange: e => handleFileSelect(e, file)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"file-\".concat(file.id),\n          children: file.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 7\n        }, this)]\n      }, file.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 6\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Repeat each file:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: localFileRepeatCount,\n          onChange: handleFileRepeatCountChange,\n          min: \"1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Repeat album:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: localAlbumRepeatCount,\n          onChange: handleAlbumRepeatCountChange,\n          min: \"1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handlePlayClick,\n      children: \"Play\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 3\n  }, this);\n};\n_s(AudioFileSelector, \"ik331I5rgHaeEeBPQ3llMvFNIWc=\");\n_c = AudioFileSelector;\nexport default AudioFileSelector;\nvar _c;\n$RefreshReg$(_c, \"AudioFileSelector\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","AudioFileSelector","_ref","_s","album","onPlay","fileRepeatCount","albumRepeatCount","selectedFiles","setSelectedFiles","localFileRepeatCount","setLocalFileRepeatCount","localAlbumRepeatCount","setLocalAlbumRepeatCount","handleFileSelect","event","file","newSelectedFiles","target","checked","push","index","indexOf","splice","handleFileRepeatCountChange","Number","value","handleAlbumRepeatCountChange","handlePlayClick","sortedFiles","sort","a","b","id","children","name","fileName","_jsxFileName","lineNumber","columnNumber","audioFiles","map","type","concat","includes","onChange","e","htmlFor","min","onClick","_c","$RefreshReg$"],"sources":["/Users/auvik/Desktop/audiorepeat/src/components/AudioFileSelector.js"],"sourcesContent":["// src/components/AudioFileSelector.js\n\nimport React, {useState, useEffect} from \"react\";\n\nconst AudioFileSelector = ({\n\talbum,\n\tonPlay,\n\tfileRepeatCount,\n\talbumRepeatCount,\n}) => {\n\tconst [selectedFiles, setSelectedFiles] = useState([]);\n\tconst [localFileRepeatCount, setLocalFileRepeatCount] =\n\t\tuseState(fileRepeatCount);\n\tconst [localAlbumRepeatCount, setLocalAlbumRepeatCount] =\n\t\tuseState(albumRepeatCount);\n\n\tuseEffect(() => {\n\t\tsetSelectedFiles([]);\n\t\tsetLocalFileRepeatCount(fileRepeatCount);\n\t\tsetLocalAlbumRepeatCount(albumRepeatCount);\n\t}, [album]);\n\n\tconst handleFileSelect = (event, file) => {\n\t\tconst newSelectedFiles = [...selectedFiles];\n\t\tif (event.target.checked) {\n\t\t\tnewSelectedFiles.push(file);\n\t\t} else {\n\t\t\tconst index = newSelectedFiles.indexOf(file);\n\t\t\tif (index > -1) {\n\t\t\t\tnewSelectedFiles.splice(index, 1);\n\t\t\t}\n\t\t}\n\t\tsetSelectedFiles(newSelectedFiles);\n\t};\n\n\tconst handleFileRepeatCountChange = (event) => {\n\t\tsetLocalFileRepeatCount(Number(event.target.value));\n\t};\n\n\tconst handleAlbumRepeatCountChange = (event) => {\n\t\tsetLocalAlbumRepeatCount(Number(event.target.value));\n\t};\n\n\tconst handlePlayClick = () => {\n\t\tconst sortedFiles = [...selectedFiles].sort((a, b) => a.id - b.id);\n\t\tonPlay(sortedFiles, localFileRepeatCount, localAlbumRepeatCount);\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<h3>{album.name}</h3>\n\t\t\t<div>\n\t\t\t\t<h4>Select Audio Files</h4>\n\t\t\t\t{album.audioFiles.map((file) => (\n\t\t\t\t\t<div key={file.id}>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\t\tid={`file-${file.id}`}\n\t\t\t\t\t\t\tchecked={selectedFiles.includes(file)}\n\t\t\t\t\t\t\tonChange={(e) => handleFileSelect(e, file)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<label htmlFor={`file-${file.id}`}>{file.name}</label>\n\t\t\t\t\t</div>\n\t\t\t\t))}\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<label>\n\t\t\t\t\tRepeat each file:\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\tvalue={localFileRepeatCount}\n\t\t\t\t\t\tonChange={handleFileRepeatCountChange}\n\t\t\t\t\t\tmin=\"1\"\n\t\t\t\t\t/>\n\t\t\t\t</label>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<label>\n\t\t\t\t\tRepeat album:\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\tvalue={localAlbumRepeatCount}\n\t\t\t\t\t\tonChange={handleAlbumRepeatCountChange}\n\t\t\t\t\t\tmin=\"1\"\n\t\t\t\t\t/>\n\t\t\t\t</label>\n\t\t\t</div>\n\t\t\t<button onClick={handlePlayClick}>Play</button>\n\t\t</div>\n\t);\n};\n\nexport default AudioFileSelector;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}