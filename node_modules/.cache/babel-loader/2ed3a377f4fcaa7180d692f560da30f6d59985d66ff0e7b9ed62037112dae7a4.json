{"ast":null,"code":"var _jsxFileName = \"/Users/auvik/Desktop/audiorepeat/src/AudioControls.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AudioControls = _ref => {\n  _s();\n  let {\n    audioList,\n    onPlay\n  } = _ref;\n  const [selectedFiles, setSelectedFiles] = useState([]);\n  const [playCount, setPlayCount] = useState(5);\n  const handleFileSelect = (event, file) => {\n    const newSelectedFiles = [...selectedFiles];\n    if (event.target.checked) {\n      newSelectedFiles.push(file);\n    } else {\n      const index = newSelectedFiles.indexOf(file);\n      if (index > -1) {\n        newSelectedFiles.splice(index, 1);\n      }\n    }\n    setSelectedFiles(newSelectedFiles);\n  };\n  const handlePlayCountChange = event => {\n    setPlayCount(Number(event.target.value));\n  };\n  const handlePlayClick = () => {\n    onPlay(selectedFiles, playCount);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Select Audio Files\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), audioList.map((file, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        id: \"file-\".concat(index),\n        onChange: e => handleFileSelect(e, file)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"file-\".concat(index),\n        children: file.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: handlePlayCountChange,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: 5,\n        children: \"5 times\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: 10,\n        children: \"10 times\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: Infinity,\n        children: \"Infinite\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handlePlayClick,\n      children: \"Play\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(AudioControls, \"xYnu4kWbCxNSPmHwkJnbjwsKFoM=\");\n_c = AudioControls;\nexport default AudioControls;\nvar _c;\n$RefreshReg$(_c, \"AudioControls\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","AudioControls","_ref","_s","audioList","onPlay","selectedFiles","setSelectedFiles","playCount","setPlayCount","handleFileSelect","event","file","newSelectedFiles","target","checked","push","index","indexOf","splice","handlePlayCountChange","Number","value","handlePlayClick","children","fileName","_jsxFileName","lineNumber","columnNumber","map","type","id","concat","onChange","e","htmlFor","name","Infinity","onClick","_c","$RefreshReg$"],"sources":["/Users/auvik/Desktop/audiorepeat/src/AudioControls.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nconst AudioControls = ({ audioList, onPlay }) => {\n  const [selectedFiles, setSelectedFiles] = useState([]);\n  const [playCount, setPlayCount] = useState(5);\n\n  const handleFileSelect = (event, file) => {\n    const newSelectedFiles = [...selectedFiles];\n    if (event.target.checked) {\n      newSelectedFiles.push(file);\n    } else {\n      const index = newSelectedFiles.indexOf(file);\n      if (index > -1) {\n        newSelectedFiles.splice(index, 1);\n      }\n    }\n    setSelectedFiles(newSelectedFiles);\n  };\n\n  const handlePlayCountChange = (event) => {\n    setPlayCount(Number(event.target.value));\n  };\n\n  const handlePlayClick = () => {\n    onPlay(selectedFiles, playCount);\n  };\n\n  return (\n    <div>\n      <h3>Select Audio Files</h3>\n      {audioList.map((file, index) => (\n        <div key={index}>\n          <input\n            type=\"checkbox\"\n            id={`file-${index}`}\n            onChange={(e) => handleFileSelect(e, file)}\n          />\n          <label htmlFor={`file-${index}`}>{file.name}</label>\n        </div>\n      ))}\n      <select onChange={handlePlayCountChange}>\n        <option value={5}>5 times</option>\n        <option value={10}>10 times</option>\n        <option value={Infinity}>Infinite</option>\n      </select>\n      <button onClick={handlePlayClick}>Play</button>\n    </div>\n  );\n};\n\nexport default AudioControls;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}