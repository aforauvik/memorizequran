{"ast":null,"code":"var _jsxFileName = \"/Users/auvik/Desktop/audiorepeat/src/App.js\",\n  _s = $RefreshSig$();\n// src/App.js\n\nimport React, { useState } from \"react\";\nimport { albums } from \"./data/albums\";\nimport AlbumList from \"./components/AlbumList\";\nimport AudioFileSelector from \"./components/AudioFileSelector\";\nimport AudioPlayer from \"./components/AudioPlayer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [selectedAlbumId, setSelectedAlbumId] = useState(null);\n  const [selectedFiles, setSelectedFiles] = useState([]);\n  const [fileRepeatCount, setFileRepeatCount] = useState(1);\n  const [albumRepeatCount, setAlbumRepeatCount] = useState(1);\n  const [playbackKey, setPlaybackKey] = useState(0);\n  const resetState = () => {\n    setSelectedFiles([]);\n    setFileRepeatCount(1);\n    setAlbumRepeatCount(1);\n  };\n  const handleSelectAlbum = albumId => {\n    setSelectedAlbumId(albumId);\n    resetState();\n  };\n  const handleSetRepeatOptions = (files, fileRepeat, albumRepeat) => {\n    setSelectedFiles(files);\n    setFileRepeatCount(fileRepeat);\n    setAlbumRepeatCount(albumRepeat);\n    setPlaybackKey(prevKey => prevKey + 1); // Update the key to restart playback\n  };\n  const selectedAlbum = albums.find(album => album.id === selectedAlbumId);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(AlbumList, {\n      albums: albums,\n      onSelectAlbum: handleSelectAlbum\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 4\n    }, this), selectedAlbum && /*#__PURE__*/_jsxDEV(AudioFileSelector, {\n      album: selectedAlbum,\n      onSetRepeatOptions: handleSetRepeatOptions,\n      fileRepeatCount: fileRepeatCount,\n      albumRepeatCount: albumRepeatCount\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }, this), selectedFiles.length > 0 && /*#__PURE__*/_jsxDEV(AudioPlayer, {\n      // Use the key to reset the component\n      audioFiles: selectedFiles.map(file => file.url),\n      fileRepeatCount: fileRepeatCount,\n      albumRepeatCount: albumRepeatCount\n    }, playbackKey, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 3\n  }, this);\n};\n_s(App, \"ngRr0cm1vi5bsiZv5agBbQgEf6g=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","albums","AlbumList","AudioFileSelector","AudioPlayer","jsxDEV","_jsxDEV","App","_s","selectedAlbumId","setSelectedAlbumId","selectedFiles","setSelectedFiles","fileRepeatCount","setFileRepeatCount","albumRepeatCount","setAlbumRepeatCount","playbackKey","setPlaybackKey","resetState","handleSelectAlbum","albumId","handleSetRepeatOptions","files","fileRepeat","albumRepeat","prevKey","selectedAlbum","find","album","id","children","onSelectAlbum","fileName","_jsxFileName","lineNumber","columnNumber","onSetRepeatOptions","length","audioFiles","map","file","url","_c","$RefreshReg$"],"sources":["/Users/auvik/Desktop/audiorepeat/src/App.js"],"sourcesContent":["// src/App.js\n\nimport React, {useState} from \"react\";\nimport {albums} from \"./data/albums\";\nimport AlbumList from \"./components/AlbumList\";\nimport AudioFileSelector from \"./components/AudioFileSelector\";\nimport AudioPlayer from \"./components/AudioPlayer\";\n\nconst App = () => {\n\tconst [selectedAlbumId, setSelectedAlbumId] = useState(null);\n\tconst [selectedFiles, setSelectedFiles] = useState([]);\n\tconst [fileRepeatCount, setFileRepeatCount] = useState(1);\n\tconst [albumRepeatCount, setAlbumRepeatCount] = useState(1);\n\tconst [playbackKey, setPlaybackKey] = useState(0);\n\n\tconst resetState = () => {\n\t\tsetSelectedFiles([]);\n\t\tsetFileRepeatCount(1);\n\t\tsetAlbumRepeatCount(1);\n\t};\n\n\tconst handleSelectAlbum = (albumId) => {\n\t\tsetSelectedAlbumId(albumId);\n\t\tresetState();\n\t};\n\n\tconst handleSetRepeatOptions = (files, fileRepeat, albumRepeat) => {\n\t\tsetSelectedFiles(files);\n\t\tsetFileRepeatCount(fileRepeat);\n\t\tsetAlbumRepeatCount(albumRepeat);\n\t\tsetPlaybackKey((prevKey) => prevKey + 1); // Update the key to restart playback\n\t};\n\n\tconst selectedAlbum = albums.find((album) => album.id === selectedAlbumId);\n\n\treturn (\n\t\t<div>\n\t\t\t<AlbumList albums={albums} onSelectAlbum={handleSelectAlbum} />\n\t\t\t{selectedAlbum && (\n\t\t\t\t<AudioFileSelector\n\t\t\t\t\talbum={selectedAlbum}\n\t\t\t\t\tonSetRepeatOptions={handleSetRepeatOptions}\n\t\t\t\t\tfileRepeatCount={fileRepeatCount}\n\t\t\t\t\talbumRepeatCount={albumRepeatCount}\n\t\t\t\t/>\n\t\t\t)}\n\t\t\t{selectedFiles.length > 0 && (\n\t\t\t\t<AudioPlayer\n\t\t\t\t\tkey={playbackKey} // Use the key to reset the component\n\t\t\t\t\taudioFiles={selectedFiles.map((file) => file.url)}\n\t\t\t\t\tfileRepeatCount={fileRepeatCount}\n\t\t\t\t\talbumRepeatCount={albumRepeatCount}\n\t\t\t\t/>\n\t\t\t)}\n\t\t</div>\n\t);\n};\n\nexport default App;\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,SAAQC,MAAM,QAAO,eAAe;AACpC,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,iBAAiB,MAAM,gCAAgC;AAC9D,OAAOC,WAAW,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAC5D,MAAM,CAACW,aAAa,EAAEC,gBAAgB,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACa,eAAe,EAAEC,kBAAkB,CAAC,GAAGd,QAAQ,CAAC,CAAC,CAAC;EACzD,MAAM,CAACe,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGhB,QAAQ,CAAC,CAAC,CAAC;EAC3D,MAAM,CAACiB,WAAW,EAAEC,cAAc,CAAC,GAAGlB,QAAQ,CAAC,CAAC,CAAC;EAEjD,MAAMmB,UAAU,GAAGA,CAAA,KAAM;IACxBP,gBAAgB,CAAC,EAAE,CAAC;IACpBE,kBAAkB,CAAC,CAAC,CAAC;IACrBE,mBAAmB,CAAC,CAAC,CAAC;EACvB,CAAC;EAED,MAAMI,iBAAiB,GAAIC,OAAO,IAAK;IACtCX,kBAAkB,CAACW,OAAO,CAAC;IAC3BF,UAAU,CAAC,CAAC;EACb,CAAC;EAED,MAAMG,sBAAsB,GAAGA,CAACC,KAAK,EAAEC,UAAU,EAAEC,WAAW,KAAK;IAClEb,gBAAgB,CAACW,KAAK,CAAC;IACvBT,kBAAkB,CAACU,UAAU,CAAC;IAC9BR,mBAAmB,CAACS,WAAW,CAAC;IAChCP,cAAc,CAAEQ,OAAO,IAAKA,OAAO,GAAG,CAAC,CAAC,CAAC,CAAC;EAC3C,CAAC;EAED,MAAMC,aAAa,GAAG1B,MAAM,CAAC2B,IAAI,CAAEC,KAAK,IAAKA,KAAK,CAACC,EAAE,KAAKrB,eAAe,CAAC;EAE1E,oBACCH,OAAA;IAAAyB,QAAA,gBACCzB,OAAA,CAACJ,SAAS;MAACD,MAAM,EAAEA,MAAO;MAAC+B,aAAa,EAAEZ;IAAkB;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAC9DT,aAAa,iBACbrB,OAAA,CAACH,iBAAiB;MACjB0B,KAAK,EAAEF,aAAc;MACrBU,kBAAkB,EAAEf,sBAAuB;MAC3CT,eAAe,EAAEA,eAAgB;MACjCE,gBAAgB,EAAEA;IAAiB;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnC,CACD,EACAzB,aAAa,CAAC2B,MAAM,GAAG,CAAC,iBACxBhC,OAAA,CAACF,WAAW;MACO;MAClBmC,UAAU,EAAE5B,aAAa,CAAC6B,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACC,GAAG,CAAE;MAClD7B,eAAe,EAAEA,eAAgB;MACjCE,gBAAgB,EAAEA;IAAiB,GAH9BE,WAAW;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAIhB,CACD;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAER,CAAC;AAAC5B,EAAA,CAhDID,GAAG;AAAAoC,EAAA,GAAHpC,GAAG;AAkDT,eAAeA,GAAG;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}